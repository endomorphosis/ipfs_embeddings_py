============================= test session starts ==============================
platform linux -- Python 3.12.3, pytest-8.3.5, pluggy-1.5.0 -- /usr/bin/python3
cachedir: .pytest_cache
rootdir: /home/barberb/laion-embeddings-1
configfile: pytest.ini
plugins: anyio-4.9.0, timeout-2.3.1, asyncio-0.20.3
asyncio: mode=Mode.STRICT
collecting ... collected 1 item

test/test_ipfs_vector_service.py::TestDistributedVectorIndex::test_search_distributed FAILED [100%]

=================================== FAILURES ===================================
______________ TestDistributedVectorIndex.test_search_distributed ______________

self = <test.test_ipfs_vector_service.TestDistributedVectorIndex object at 0x746e6656db20>
distributed_index = <services.ipfs_vector_service.DistributedVectorIndex object at 0x746ea548a5a0>
mock_vector_service = <Mock id='128017512198416'>
mock_ipfs_storage = <Mock id='128017512403104'>

    @pytest.mark.asyncio
    async def test_search_distributed(self, distributed_index, mock_vector_service, mock_ipfs_storage):
        """Test searching across distributed shards."""
        # Setup existing shards
        distributed_index.shard_metadata = {
            'shard_0': {'ipfs_hash': 'QmShard123', 'vector_count': 2}
        }
    
        query_embedding = [0.1, 0.2]
        results = await distributed_index.search_distributed(query_embedding, k=5)
    
>       assert len(results) == 2  # Mock returns 2 results
E       AssertionError: assert 4 == 2
E        +  where 4 = len({'results': [], 'searched_shards': 1, 'status': 'success', 'total_candidates': 0})

test/test_ipfs_vector_service.py:233: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    services.ipfs_vector_service:ipfs_vector_service.py:524 Error searching shard shard_0: 'cid'
=============================== warnings summary ===============================
test/test_ipfs_vector_service.py:370
  /home/barberb/laion-embeddings-1/test/test_ipfs_vector_service.py:370: PytestUnknownMarkWarning: Unknown pytest.mark.performance - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html
    @pytest.mark.performance

test/test_ipfs_vector_service.py::TestDistributedVectorIndex::test_search_distributed
  /home/barberb/.local/lib/python3.12/site-packages/faiss/loader.py:49: DeprecationWarning: numpy.core._multiarray_umath is deprecated and has been renamed to numpy._core._multiarray_umath. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core._multiarray_umath.__cpu_features__.
    from numpy.core._multiarray_umath import __cpu_features__

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED test/test_ipfs_vector_service.py::TestDistributedVectorIndex::test_search_distributed
======================== 1 failed, 2 warnings in 0.36s =========================
test_search_distributed exit code: 1
