{
  "timestamp": "2025-06-05T21:03:15.815560",
  "duration_seconds": 26.821559,
  "overall_status": "FAILURE",
  "summary": {
    "total_tests": 7,
    "passed_tests": 3,
    "critical_tests": 6,
    "critical_passed": 2
  },
  "test_results": {
    "Standalone Integration Tests": {
      "result": {
        "success": true,
        "stdout": "Starting integration tests...\n\n\n==================================================\nTesting basic vector service...\nAdding embeddings...\nAdd result: {'status': 'success', 'added_count': 50, 'total_vectors': 50}\nTesting search...\nSearch result: {'status': 'success', 'results': [{'index': 14, 'distance': 54.38917541503906, 'similarity_score': np.float32(0.01805407), 'id': 'vec_14', 'text': 'Sample text 14', 'metadata': {'id': 'doc_14', 'source': 'test'}}, {'index': 25, 'distance': 55.87206268310547, 'similarity_score': np.float32(0.017583326), 'id': 'vec_25', 'text': 'Sample text 25', 'metadata': {'id': 'doc_25', 'source': 'test'}}, {'index': 23, 'distance': 57.45930099487305, 'similarity_score': np.float32(0.017105918), 'id': 'vec_23', 'text': 'Sample text 23', 'metadata': {'id': 'doc_23', 'source': 'test'}}, {'index': 19, 'distance': 57.49851989746094, 'similarity_score': np.float32(0.01709445), 'id': 'vec_19', 'text': 'Sample text 19', 'metadata': {'id': 'doc_19', 'source': 'test'}}, {'index': 38, 'distance': 58.953346252441406, 'similarity_score': np.float32(0.016679635), 'id': 'vec_38', 'text': 'Sample text 38', 'metadata': {'id': 'doc_38', 'source': 'test'}}], 'query_time_ms': 0}\n\u2713 Vector service test passed!\n==================================================\n\n==================================================\nTesting IPFS vector service...\nAdding embeddings to IPFS service...\nAdd result: {'status': 'success', 'local': {'status': 'success', 'added_count': 30, 'total_vectors': 30}, 'distributed': {'status': 'success', 'added_count': 30, 'shard_ids': ['shard_ae3f31bd', 'shard_7d90ddaf'], 'shard_cids': ['QmTestHash123', 'QmTestHash123'], 'total_vectors': 30, 'shard_count': 2, 'manifest_hash': 'QmTestHash123'}}\nTesting search...\nSearch result: {'status': 'success', 'results': {'local': {'status': 'success', 'results': [{'index': 18, 'distance': 62.17408752441406, 'similarity_score': np.float32(0.015829274), 'id': 'vec_18', 'text': 'Sample text 18', 'metadata': {'id': 'doc_18', 'source': 'test', 'text': 'Sample text 18'}}, {'index': 6, 'distance': 62.58126449584961, 'similarity_score': np.float32(0.015727904), 'id': 'vec_6', 'text': 'Sample text 6', 'metadata': {'id': 'doc_6', 'source': 'test', 'text': 'Sample text 6'}}, {'index': 8, 'distance': 62.676109313964844, 'similarity_score': np.float32(0.015704477), 'id': 'vec_8', 'text': 'Sample text 8', 'metadata': {'id': 'doc_8', 'source': 'test', 'text': 'Sample text 8'}}, {'index': 22, 'distance': 62.96046447753906, 'similarity_score': np.float32(0.015634658), 'id': 'vec_22', 'text': 'Sample text 22', 'metadata': {'id': 'doc_22', 'source': 'test', 'text': 'Sample text 22'}}, {'index': 28, 'distance': 63.448707580566406, 'similarity_score': np.float32(0.015516215), 'id': 'vec_28', 'text': 'Sample text 28', 'metadata': {'id': 'doc_28', 'source': 'test', 'text': 'Sample text 28'}}], 'query_time_ms': 0}}}\n\u2713 IPFS vector service test passed!\n==================================================\n\n==================================================\nTesting clustering service...\nAdding vectors with clustering...\nAdd result: {'status': 'success', 'total_added': 30, 'shards_used': ['cluster_2_shard', 'cluster_1_shard', 'cluster_0_shard'], 'clustering_quality': {'silhouette_score': 0.0076288082636892796, 'calinski_harabasz_score': 1.2368385791778564, 'n_clusters': 3, 'n_noise': 0}, 'clusters_info': {np.int32(0): {'size': 3, 'quality_score': np.float32(0.1831885)}, np.int32(1): {'size': 15, 'quality_score': np.float32(0.15579808)}, np.int32(2): {'size': 12, 'quality_score': np.float32(0.15862617)}}}\nTesting search with cluster routing...\nSearch result: {'status': 'success', 'results': [{'index': 5, 'distance': 62.17408752441406, 'similarity_score': np.float32(0.015829274), 'id': 'vec_5', 'text': 'Sample text 18', 'metadata': {'id': 'doc_18', 'source': 'test'}, 'shard_id': 'cluster_2_shard', 'cluster_id': np.int32(2)}, {'index': 2, 'distance': 62.58126449584961, 'similarity_score': np.float32(0.015727904), 'id': 'vec_2', 'text': 'Sample text 6', 'metadata': {'id': 'doc_6', 'source': 'test'}, 'shard_id': 'cluster_1_shard', 'cluster_id': np.int32(1)}, {'index': 3, 'distance': 62.676109313964844, 'similarity_score': np.float32(0.015704477), 'id': 'vec_3', 'text': 'Sample text 8', 'metadata': {'id': 'doc_8', 'source': 'test'}, 'shard_id': 'cluster_1_shard', 'cluster_id': np.int32(1)}, {'index': 8, 'distance': 62.96046447753906, 'similarity_score': np.float32(0.015634658), 'id': 'vec_8', 'text': 'Sample text 22', 'metadata': {'id': 'doc_22', 'source': 'test'}, 'shard_id': 'cluster_2_shard', 'cluster_id': np.int32(2)}, {'index': 11, 'distance': 63.448707580566406, 'similarity_score': np.float32(0.015516215), 'id': 'vec_11', 'text': 'Sample text 28', 'metadata': {'id': 'doc_28', 'source': 'test'}, 'shard_id': 'cluster_2_shard', 'cluster_id': np.int32(2)}], 'shards_searched': ['cluster_2_shard', 'cluster_1_shard', 'cluster_0_shard'], 'total_candidates': 13, 'search_strategy': 'adaptive'}\n\u2713 Clustering service test passed!\n==================================================\n\n\nTest Results:\nPassed: 3/3\n\ud83c\udf89 All integration tests passed!\n",
        "stderr": "Failed to connect to IPFS: 'NoneType' object has no attribute 'connect'\nIPFS connection failed in test mode: 'NoneType' object has no attribute 'connect', using mock client\n",
        "returncode": 0
      },
      "critical": true,
      "command": "python test_integration_standalone.py"
    },
    "Vector Service Unit Tests": {
      "result": {
        "success": false,
        "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.12.3, pytest-8.4.0, pluggy-1.6.0 -- /home/barberb/laion-embeddings-1/venv/bin/python\ncachedir: .pytest_cache\nrootdir: /home/barberb/laion-embeddings-1\nconfigfile: pytest.ini\nplugins: anyio-4.9.0\ncollecting ... collected 23 items\n\ntest/test_vector_service.py::TestVectorConfig::test_vector_config_defaults PASSED [  4%]\ntest/test_vector_service.py::TestVectorConfig::test_vector_config_custom PASSED [  8%]\ntest/test_vector_service.py::TestVectorConfig::test_vector_config_testing_mode PASSED [ 13%]\ntest/test_vector_service.py::TestFAISSIndex::test_faiss_index_initialization PASSED [ 17%]\ntest/test_vector_service.py::TestFAISSIndex::test_flat_index_creation PASSED [ 21%]\ntest/test_vector_service.py::TestFAISSIndex::test_ivf_index_creation PASSED [ 26%]\ntest/test_vector_service.py::TestFAISSIndex::test_add_vectors_flat PASSED [ 30%]\ntest/test_vector_service.py::TestFAISSIndex::test_search_vectors PASSED  [ 34%]\ntest/test_vector_service.py::TestFAISSIndex::test_train_ivf_index PASSED [ 39%]\ntest/test_vector_service.py::TestFAISSIndex::test_save_and_load_index PASSED [ 43%]\ntest/test_vector_service.py::TestFAISSIndex::test_normalize_vectors PASSED [ 47%]\ntest/test_vector_service.py::TestVectorService::test_vector_service_initialization PASSED [ 52%]\ntest/test_vector_service.py::TestVectorService::test_add_vectors_with_metadata FAILED [ 56%]\ntest/test_vector_service.py::TestVectorService::test_search_vectors_with_metadata FAILED [ 60%]\ntest/test_vector_service.py::TestVectorService::test_get_vector_by_id FAILED [ 65%]\ntest/test_vector_service.py::TestVectorService::test_get_index_stats FAILED [ 69%]\ntest/test_vector_service.py::TestVectorService::test_save_and_load_service FAILED [ 73%]\ntest/test_vector_service.py::TestVectorService::test_clear_index FAILED  [ 78%]\ntest/test_vector_service.py::TestVectorService::test_error_handling_mismatched_vectors_metadata FAILED [ 82%]\ntest/test_vector_service.py::TestVectorService::test_error_handling_invalid_dimension FAILED [ 86%]\ntest/test_vector_service.py::TestVectorServiceAsync::test_async_search FAILED [ 91%]\ntest/test_vector_service.py::TestVectorServiceIntegration::test_large_dataset_handling FAILED [ 95%]\ntest/test_vector_service.py::TestVectorServiceIntegration::test_different_index_types FAILED [100%]\n\n=================================== FAILURES ===================================\n_______________ TestVectorService.test_add_vectors_with_metadata _______________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n_____________ TestVectorService.test_search_vectors_with_metadata ______________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n___________________ TestVectorService.test_get_vector_by_id ____________________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n____________________ TestVectorService.test_get_index_stats ____________________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n_________________ TestVectorService.test_save_and_load_service _________________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n______________________ TestVectorService.test_clear_index ______________________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n______ TestVectorService.test_error_handling_mismatched_vectors_metadata _______\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n___________ TestVectorService.test_error_handling_invalid_dimension ____________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n___________________ TestVectorServiceAsync.test_async_search ___________________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n___________ TestVectorServiceIntegration.test_large_dataset_handling ___________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n___________ TestVectorServiceIntegration.test_different_index_types ____________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n=============================== warnings summary ===============================\ntest/test_vector_service.py:231\n  /home/barberb/laion-embeddings-1/test/test_vector_service.py:231: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_vector_service.py:245\n  /home/barberb/laion-embeddings-1/test/test_vector_service.py:245: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_vector_service.py:266\n  /home/barberb/laion-embeddings-1/test/test_vector_service.py:266: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_vector_service.py:283\n  /home/barberb/laion-embeddings-1/test/test_vector_service.py:283: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_vector_service.py:298\n  /home/barberb/laion-embeddings-1/test/test_vector_service.py:298: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_vector_service.py:318\n  /home/barberb/laion-embeddings-1/test/test_vector_service.py:318: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_vector_service.py:336\n  /home/barberb/laion-embeddings-1/test/test_vector_service.py:336: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_vector_service.py:353\n  /home/barberb/laion-embeddings-1/test/test_vector_service.py:353: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_vector_service.py:381\n  /home/barberb/laion-embeddings-1/test/test_vector_service.py:381: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_vector_service.py:405\n  /home/barberb/laion-embeddings-1/test/test_vector_service.py:405: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_vector_service.py:430\n  /home/barberb/laion-embeddings-1/test/test_vector_service.py:430: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_vector_service.py::TestVectorConfig::test_vector_config_defaults\n  /usr/lib/python3.12/importlib/__init__.py:90: DeprecationWarning: storacha_clusters module is deprecated. Use ipfs_kit_py.storacha_kit instead. See docs/IPFS_KIT_INTEGRATION_GUIDE.md for migration instructions.\n    return _bootstrap._gcd_import(name[level:], package, level)\n\ntest/test_vector_service.py::TestVectorConfig::test_vector_config_defaults\n  /home/barberb/laion-embeddings-1/venv/lib/python3.12/site-packages/faiss/loader.py:49: DeprecationWarning: numpy.core._multiarray_umath is deprecated and has been renamed to numpy._core._multiarray_umath. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core._multiarray_umath.__cpu_features__.\n    from numpy.core._multiarray_umath import __cpu_features__\n\ntest/test_vector_service.py::TestVectorConfig::test_vector_config_defaults\n  <frozen importlib._bootstrap>:488: DeprecationWarning: builtin type SwigPyPacked has no __module__ attribute\n\ntest/test_vector_service.py::TestVectorConfig::test_vector_config_defaults\n  <frozen importlib._bootstrap>:488: DeprecationWarning: builtin type SwigPyObject has no __module__ attribute\n\ntest/test_vector_service.py::TestVectorConfig::test_vector_config_defaults\n  <frozen importlib._bootstrap>:488: DeprecationWarning: builtin type swigvarlink has no __module__ attribute\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED test/test_vector_service.py::TestVectorService::test_add_vectors_with_metadata\nFAILED test/test_vector_service.py::TestVectorService::test_search_vectors_with_metadata\nFAILED test/test_vector_service.py::TestVectorService::test_get_vector_by_id\nFAILED test/test_vector_service.py::TestVectorService::test_get_index_stats\nFAILED test/test_vector_service.py::TestVectorService::test_save_and_load_service\nFAILED test/test_vector_service.py::TestVectorService::test_clear_index - Fai...\nFAILED test/test_vector_service.py::TestVectorService::test_error_handling_mismatched_vectors_metadata\nFAILED test/test_vector_service.py::TestVectorService::test_error_handling_invalid_dimension\nFAILED test/test_vector_service.py::TestVectorServiceAsync::test_async_search\nFAILED test/test_vector_service.py::TestVectorServiceIntegration::test_large_dataset_handling\nFAILED test/test_vector_service.py::TestVectorServiceIntegration::test_different_index_types\n================== 11 failed, 12 passed, 16 warnings in 0.70s ==================\n",
        "stderr": "",
        "returncode": 1
      },
      "critical": true,
      "command": "python -m pytest test/test_vector_service.py -v --tb=short"
    },
    "IPFS Vector Service Unit Tests": {
      "result": {
        "success": false,
        "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.12.3, pytest-8.4.0, pluggy-1.6.0 -- /home/barberb/laion-embeddings-1/venv/bin/python\ncachedir: .pytest_cache\nrootdir: /home/barberb/laion-embeddings-1\nconfigfile: pytest.ini\nplugins: anyio-4.9.0\ncollecting ... collected 15 items\n\ntest/test_ipfs_vector_service.py::TestIPFSVectorStorage::test_ipfs_storage_initialization PASSED [  6%]\ntest/test_ipfs_vector_service.py::TestIPFSVectorStorage::test_store_vector_shard FAILED [ 13%]\ntest/test_ipfs_vector_service.py::TestIPFSVectorStorage::test_retrieve_vector_shard FAILED [ 20%]\ntest/test_ipfs_vector_service.py::TestIPFSVectorStorage::test_store_index_manifest FAILED [ 26%]\ntest/test_ipfs_vector_service.py::TestIPFSVectorStorage::test_retrieve_index_manifest FAILED [ 33%]\ntest/test_ipfs_vector_service.py::TestIPFSVectorStorage::test_ipfs_connection_failure PASSED [ 40%]\ntest/test_ipfs_vector_service.py::TestIPFSVectorStorage::test_missing_ipfs_client PASSED [ 46%]\ntest/test_ipfs_vector_service.py::TestDistributedVectorIndex::test_add_vectors_distributed FAILED [ 53%]\ntest/test_ipfs_vector_service.py::TestDistributedVectorIndex::test_search_distributed FAILED [ 60%]\ntest/test_ipfs_vector_service.py::TestDistributedVectorIndex::test_load_from_manifest FAILED [ 66%]\ntest/test_ipfs_vector_service.py::TestDistributedVectorIndex::test_shard_creation FAILED [ 73%]\ntest/test_ipfs_vector_service.py::TestDistributedVectorIndex::test_error_handling_in_search FAILED [ 80%]\ntest/test_ipfs_vector_service.py::TestIPFSIntegration::test_round_trip_vector_storage FAILED [ 86%]\ntest/test_ipfs_vector_service.py::TestIPFSIntegration::test_manifest_consistency FAILED [ 93%]\ntest/test_ipfs_vector_service.py::TestIPFSPerformance::test_large_shard_storage FAILED [100%]\n\n=================================== FAILURES ===================================\n________________ TestIPFSVectorStorage.test_store_vector_shard _________________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n_______________ TestIPFSVectorStorage.test_retrieve_vector_shard _______________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n_______________ TestIPFSVectorStorage.test_store_index_manifest ________________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n______________ TestIPFSVectorStorage.test_retrieve_index_manifest ______________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n___________ TestDistributedVectorIndex.test_add_vectors_distributed ____________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n______________ TestDistributedVectorIndex.test_search_distributed ______________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n______________ TestDistributedVectorIndex.test_load_from_manifest ______________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n________________ TestDistributedVectorIndex.test_shard_creation ________________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n___________ TestDistributedVectorIndex.test_error_handling_in_search ___________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n______________ TestIPFSIntegration.test_round_trip_vector_storage ______________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n________________ TestIPFSIntegration.test_manifest_consistency _________________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n_________________ TestIPFSPerformance.test_large_shard_storage _________________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n=============================== warnings summary ===============================\ntest/test_ipfs_vector_service.py:55\n  /home/barberb/laion-embeddings-1/test/test_ipfs_vector_service.py:55: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_ipfs_vector_service.py:75\n  /home/barberb/laion-embeddings-1/test/test_ipfs_vector_service.py:75: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_ipfs_vector_service.py:90\n  /home/barberb/laion-embeddings-1/test/test_ipfs_vector_service.py:90: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_ipfs_vector_service.py:105\n  /home/barberb/laion-embeddings-1/test/test_ipfs_vector_service.py:105: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_ipfs_vector_service.py:204\n  /home/barberb/laion-embeddings-1/test/test_ipfs_vector_service.py:204: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_ipfs_vector_service.py:222\n  /home/barberb/laion-embeddings-1/test/test_ipfs_vector_service.py:222: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_ipfs_vector_service.py:242\n  /home/barberb/laion-embeddings-1/test/test_ipfs_vector_service.py:242: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_ipfs_vector_service.py:254\n  /home/barberb/laion-embeddings-1/test/test_ipfs_vector_service.py:254: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_ipfs_vector_service.py:265\n  /home/barberb/laion-embeddings-1/test/test_ipfs_vector_service.py:265: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_ipfs_vector_service.py:286\n  /home/barberb/laion-embeddings-1/test/test_ipfs_vector_service.py:286: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_ipfs_vector_service.py:325\n  /home/barberb/laion-embeddings-1/test/test_ipfs_vector_service.py:325: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_ipfs_vector_service.py:379\n  /home/barberb/laion-embeddings-1/test/test_ipfs_vector_service.py:379: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_ipfs_vector_service.py::TestIPFSVectorStorage::test_ipfs_storage_initialization\n  /usr/lib/python3.12/importlib/__init__.py:90: DeprecationWarning: storacha_clusters module is deprecated. Use ipfs_kit_py.storacha_kit instead. See docs/IPFS_KIT_INTEGRATION_GUIDE.md for migration instructions.\n    return _bootstrap._gcd_import(name[level:], package, level)\n\ntest/test_ipfs_vector_service.py::TestIPFSVectorStorage::test_ipfs_storage_initialization\n  /home/barberb/laion-embeddings-1/venv/lib/python3.12/site-packages/faiss/loader.py:49: DeprecationWarning: numpy.core._multiarray_umath is deprecated and has been renamed to numpy._core._multiarray_umath. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core._multiarray_umath.__cpu_features__.\n    from numpy.core._multiarray_umath import __cpu_features__\n\ntest/test_ipfs_vector_service.py::TestIPFSVectorStorage::test_ipfs_storage_initialization\n  <frozen importlib._bootstrap>:488: DeprecationWarning: builtin type SwigPyPacked has no __module__ attribute\n\ntest/test_ipfs_vector_service.py::TestIPFSVectorStorage::test_ipfs_storage_initialization\n  <frozen importlib._bootstrap>:488: DeprecationWarning: builtin type SwigPyObject has no __module__ attribute\n\ntest/test_ipfs_vector_service.py::TestIPFSVectorStorage::test_ipfs_storage_initialization\n  <frozen importlib._bootstrap>:488: DeprecationWarning: builtin type swigvarlink has no __module__ attribute\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED test/test_ipfs_vector_service.py::TestIPFSVectorStorage::test_store_vector_shard\nFAILED test/test_ipfs_vector_service.py::TestIPFSVectorStorage::test_retrieve_vector_shard\nFAILED test/test_ipfs_vector_service.py::TestIPFSVectorStorage::test_store_index_manifest\nFAILED test/test_ipfs_vector_service.py::TestIPFSVectorStorage::test_retrieve_index_manifest\nFAILED test/test_ipfs_vector_service.py::TestDistributedVectorIndex::test_add_vectors_distributed\nFAILED test/test_ipfs_vector_service.py::TestDistributedVectorIndex::test_search_distributed\nFAILED test/test_ipfs_vector_service.py::TestDistributedVectorIndex::test_load_from_manifest\nFAILED test/test_ipfs_vector_service.py::TestDistributedVectorIndex::test_shard_creation\nFAILED test/test_ipfs_vector_service.py::TestDistributedVectorIndex::test_error_handling_in_search\nFAILED test/test_ipfs_vector_service.py::TestIPFSIntegration::test_round_trip_vector_storage\nFAILED test/test_ipfs_vector_service.py::TestIPFSIntegration::test_manifest_consistency\nFAILED test/test_ipfs_vector_service.py::TestIPFSPerformance::test_large_shard_storage\n================== 12 failed, 3 passed, 17 warnings in 0.86s ===================\n",
        "stderr": "",
        "returncode": 1
      },
      "critical": true,
      "command": "python -m pytest test/test_ipfs_vector_service.py -v --tb=short"
    },
    "Clustering Service Unit Tests": {
      "result": {
        "success": false,
        "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.12.3, pytest-8.4.0, pluggy-1.6.0 -- /home/barberb/laion-embeddings-1/venv/bin/python\ncachedir: .pytest_cache\nrootdir: /home/barberb/laion-embeddings-1\nconfigfile: pytest.ini\nplugins: anyio-4.9.0\ncollecting ... collected 19 items\n\ntest/test_clustering_service.py::TestClusterConfig::test_cluster_config_defaults PASSED [  5%]\ntest/test_clustering_service.py::TestClusterConfig::test_cluster_config_custom PASSED [ 10%]\ntest/test_clustering_service.py::TestVectorClusterer::test_clusterer_initialization PASSED [ 15%]\ntest/test_clustering_service.py::TestVectorClusterer::test_kmeans_clustering PASSED [ 21%]\ntest/test_clustering_service.py::TestVectorClusterer::test_hierarchical_clustering PASSED [ 26%]\ntest/test_clustering_service.py::TestVectorClusterer::test_predict_cluster PASSED [ 31%]\ntest/test_clustering_service.py::TestVectorClusterer::test_predict_before_fit_error PASSED [ 36%]\ntest/test_clustering_service.py::TestVectorClusterer::test_get_cluster_stats PASSED [ 42%]\ntest/test_clustering_service.py::TestVectorClusterer::test_sklearn_import_error PASSED [ 47%]\ntest/test_clustering_service.py::TestSmartShardingService::test_create_clustered_shards FAILED [ 52%]\ntest/test_clustering_service.py::TestSmartShardingService::test_search_clustered_shards FAILED [ 57%]\ntest/test_clustering_service.py::TestSmartShardingService::test_search_with_limited_clusters FAILED [ 63%]\ntest/test_clustering_service.py::TestSmartShardingService::test_search_without_clustering_info FAILED [ 68%]\ntest/test_clustering_service.py::TestSmartShardingService::test_error_handling_in_clustered_search FAILED [ 73%]\ntest/test_clustering_service.py::TestClusteringIntegration::test_end_to_end_clustering_workflow FAILED [ 78%]\ntest/test_clustering_service.py::TestClusteringIntegration::test_cluster_quality_metrics PASSED [ 84%]\ntest/test_clustering_service.py::TestClusteringIntegration::test_adaptive_cluster_search FAILED [ 89%]\ntest/test_clustering_service.py::TestClusteringPerformance::test_large_dataset_clustering PASSED [ 94%]\ntest/test_clustering_service.py::TestClusteringPerformance::test_concurrent_shard_operations FAILED [100%]\n\n=================================== FAILURES ===================================\n____________ TestSmartShardingService.test_create_clustered_shards _____________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n____________ TestSmartShardingService.test_search_clustered_shards _____________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n__________ TestSmartShardingService.test_search_with_limited_clusters __________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n_________ TestSmartShardingService.test_search_without_clustering_info _________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n_______ TestSmartShardingService.test_error_handling_in_clustered_search _______\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n________ TestClusteringIntegration.test_end_to_end_clustering_workflow _________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n____________ TestClusteringIntegration.test_adaptive_cluster_search ____________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n__________ TestClusteringPerformance.test_concurrent_shard_operations __________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n=============================== warnings summary ===============================\ntest/test_clustering_service.py:271\n  /home/barberb/laion-embeddings-1/test/test_clustering_service.py:271: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_clustering_service.py:293\n  /home/barberb/laion-embeddings-1/test/test_clustering_service.py:293: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_clustering_service.py:311\n  /home/barberb/laion-embeddings-1/test/test_clustering_service.py:311: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_clustering_service.py:330\n  /home/barberb/laion-embeddings-1/test/test_clustering_service.py:330: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_clustering_service.py:346\n  /home/barberb/laion-embeddings-1/test/test_clustering_service.py:346: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_clustering_service.py:367\n  /home/barberb/laion-embeddings-1/test/test_clustering_service.py:367: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_clustering_service.py:435\n  /home/barberb/laion-embeddings-1/test/test_clustering_service.py:435: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_clustering_service.py:496\n  /home/barberb/laion-embeddings-1/test/test_clustering_service.py:496: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_clustering_service.py::TestClusterConfig::test_cluster_config_defaults\n  /usr/lib/python3.12/importlib/__init__.py:90: DeprecationWarning: storacha_clusters module is deprecated. Use ipfs_kit_py.storacha_kit instead. See docs/IPFS_KIT_INTEGRATION_GUIDE.md for migration instructions.\n    return _bootstrap._gcd_import(name[level:], package, level)\n\ntest/test_clustering_service.py::TestClusterConfig::test_cluster_config_defaults\n  /home/barberb/laion-embeddings-1/venv/lib/python3.12/site-packages/faiss/loader.py:49: DeprecationWarning: numpy.core._multiarray_umath is deprecated and has been renamed to numpy._core._multiarray_umath. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core._multiarray_umath.__cpu_features__.\n    from numpy.core._multiarray_umath import __cpu_features__\n\ntest/test_clustering_service.py::TestClusterConfig::test_cluster_config_defaults\n  <frozen importlib._bootstrap>:488: DeprecationWarning: builtin type SwigPyPacked has no __module__ attribute\n\ntest/test_clustering_service.py::TestClusterConfig::test_cluster_config_defaults\n  <frozen importlib._bootstrap>:488: DeprecationWarning: builtin type SwigPyObject has no __module__ attribute\n\ntest/test_clustering_service.py::TestClusterConfig::test_cluster_config_defaults\n  <frozen importlib._bootstrap>:488: DeprecationWarning: builtin type swigvarlink has no __module__ attribute\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED test/test_clustering_service.py::TestSmartShardingService::test_create_clustered_shards\nFAILED test/test_clustering_service.py::TestSmartShardingService::test_search_clustered_shards\nFAILED test/test_clustering_service.py::TestSmartShardingService::test_search_with_limited_clusters\nFAILED test/test_clustering_service.py::TestSmartShardingService::test_search_without_clustering_info\nFAILED test/test_clustering_service.py::TestSmartShardingService::test_error_handling_in_clustered_search\nFAILED test/test_clustering_service.py::TestClusteringIntegration::test_end_to_end_clustering_workflow\nFAILED test/test_clustering_service.py::TestClusteringIntegration::test_adaptive_cluster_search\nFAILED test/test_clustering_service.py::TestClusteringPerformance::test_concurrent_shard_operations\n================== 8 failed, 11 passed, 13 warnings in 6.85s ===================\n",
        "stderr": "",
        "returncode": 1
      },
      "critical": true,
      "command": "python -m pytest test/test_clustering_service.py -v --tb=short"
    },
    "Vector Service Integration Tests": {
      "result": {
        "success": false,
        "stdout": "============================= test session starts ==============================\nplatform linux -- Python 3.12.3, pytest-8.4.0, pluggy-1.6.0 -- /home/barberb/laion-embeddings-1/venv/bin/python\ncachedir: .pytest_cache\nrootdir: /home/barberb/laion-embeddings-1\nconfigfile: pytest.ini\nplugins: anyio-4.9.0\ncollecting ... collected 2 items\n\ntest/test_complete_integration.py::TestVectorServiceIntegration::test_vector_service_complete_workflow FAILED [ 50%]\ntest/test_complete_integration.py::TestVectorServiceIntegration::test_different_index_types FAILED [100%]\n\n=================================== FAILURES ===================================\n______ TestVectorServiceIntegration.test_vector_service_complete_workflow ______\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n___________ TestVectorServiceIntegration.test_different_index_types ____________\nasync def functions are not natively supported.\nYou need to install a suitable plugin for your async framework, for example:\n  - anyio\n  - pytest-asyncio\n  - pytest-tornasync\n  - pytest-trio\n  - pytest-twisted\n=============================== warnings summary ===============================\ntest/test_complete_integration.py:153\n  /home/barberb/laion-embeddings-1/test/test_complete_integration.py:153: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_complete_integration.py:206\n  /home/barberb/laion-embeddings-1/test/test_complete_integration.py:206: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_complete_integration.py:233\n  /home/barberb/laion-embeddings-1/test/test_complete_integration.py:233: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_complete_integration.py:294\n  /home/barberb/laion-embeddings-1/test/test_complete_integration.py:294: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_complete_integration.py:324\n  /home/barberb/laion-embeddings-1/test/test_complete_integration.py:324: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_complete_integration.py:379\n  /home/barberb/laion-embeddings-1/test/test_complete_integration.py:379: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_complete_integration.py:401\n  /home/barberb/laion-embeddings-1/test/test_complete_integration.py:401: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_complete_integration.py:513\n  /home/barberb/laion-embeddings-1/test/test_complete_integration.py:513: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_complete_integration.py:539\n  /home/barberb/laion-embeddings-1/test/test_complete_integration.py:539: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest/test_complete_integration.py::TestVectorServiceIntegration::test_vector_service_complete_workflow\n  /usr/lib/python3.12/importlib/__init__.py:90: DeprecationWarning: storacha_clusters module is deprecated. Use ipfs_kit_py.storacha_kit instead. See docs/IPFS_KIT_INTEGRATION_GUIDE.md for migration instructions.\n    return _bootstrap._gcd_import(name[level:], package, level)\n\ntest/test_complete_integration.py::TestVectorServiceIntegration::test_vector_service_complete_workflow\n  /home/barberb/laion-embeddings-1/venv/lib/python3.12/site-packages/faiss/loader.py:49: DeprecationWarning: numpy.core._multiarray_umath is deprecated and has been renamed to numpy._core._multiarray_umath. The numpy._core namespace contains private NumPy internals and its use is discouraged, as NumPy internals can change without warning in any release. In practice, most real-world usage of numpy.core is to access functionality in the public NumPy API. If that is the case, use the public NumPy API. If not, you are using NumPy internals. If you would still like to access an internal attribute, use numpy._core._multiarray_umath.__cpu_features__.\n    from numpy.core._multiarray_umath import __cpu_features__\n\ntest/test_complete_integration.py::TestVectorServiceIntegration::test_vector_service_complete_workflow\n  <frozen importlib._bootstrap>:488: DeprecationWarning: builtin type SwigPyPacked has no __module__ attribute\n\ntest/test_complete_integration.py::TestVectorServiceIntegration::test_vector_service_complete_workflow\n  <frozen importlib._bootstrap>:488: DeprecationWarning: builtin type SwigPyObject has no __module__ attribute\n\ntest/test_complete_integration.py::TestVectorServiceIntegration::test_vector_service_complete_workflow\n  <frozen importlib._bootstrap>:488: DeprecationWarning: builtin type swigvarlink has no __module__ attribute\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED test/test_complete_integration.py::TestVectorServiceIntegration::test_vector_service_complete_workflow\nFAILED test/test_complete_integration.py::TestVectorServiceIntegration::test_different_index_types\n======================== 2 failed, 14 warnings in 0.46s ========================\n",
        "stderr": "",
        "returncode": 1
      },
      "critical": true,
      "command": "python -m pytest test/test_complete_integration.py::TestVectorServiceIntegration -v"
    },
    "Basic Import Tests": {
      "result": {
        "success": true,
        "stdout": "",
        "stderr": "",
        "returncode": 0
      },
      "critical": false,
      "command": "python test_imports.py"
    },
    "Service Dependencies Check": {
      "result": {
        "success": true,
        "stdout": "All services import OK\n",
        "stderr": "",
        "returncode": 0
      },
      "critical": true,
      "command": "python -c \"from services.vector_service import VectorService; from services.clustering_service import SmartShardingService; print(\\\"All services import OK\\\")\""
    }
  }
}